\section{Related Work}
\label{sec:related}
\paragraph{Hierarchical Segmentation}
There is a rich literature of hierarchical segmentation.
As stated in the introduction, our focus in this paper is not to develop a better hierarchical
segmentation algorithm, but to provide a better alignment of a given hierarchy. 
%Therefore we give a brief review of several most popular approaches.
Hierarchical segmentation typically starts from various local information embedded in an affinity matrix,
such as Pointwise Mutual Information~\cite{isola2014crisp}, or multiscale local brightness, color, and texture cues~\cite{arbelaez2011contour}.
It then greedily constructs a hierarchy of regions by iteratively merging the most similar sets of regions
according to a certain metric. 
The result of hierarchical segmentation is commonly represented as an Ultrametric Contour Map (UCM),
where different levels of segmentation can be produced by applying different thresholds to UCM.
This work proposes to realign the hierarchies in order to make the thresholds of the UCM more closely related
to the scale of objects.
Hierarchical segmentation has become the major trend in image segmentation and most of top-performance segmenters~\cite{arbelaez2011contour,arbelaez2014multiscale,Ren2013,kim2013learning} fall into this category. 
%Particularly we use~\cite{arbelaez2011contour,arbelaez2014multiscale} as our input due to their popularity in many other vision applications. Also options are also possible for our system. 

\paragraph{Multiple Segmentations}
Working with multiple segmentations at the same time has been used in the computer vision community
for a long time, with the idea that, while none of the segmentations is likely to partition the image perfectly, some parts in some segmentations might be useful.
Hoiem \etal~\cite{hoiem2005geometric} use this idea to estimate the scene structure.
A similar idea was exploited by Russell \etal~\cite{russell2006using} to discover objects,
and by Malisiewicz \etal~\cite{malisiewicz2007improving} to improve the spatial support of regions for
recognition.
By realigning the hierarchies we aim to minimize the number of partitions from a hierarchy needed to obtain
reasonable results, since we concentrate same-scale regions in the same partition.
%We have the similar philosophy with previous works. Instead of choosing one optimal scale, we aim to take leverage of the rich multiscale information stored in the segmentation hierarchy. 
Our work also shares some similarities with~\cite{xu2013flattening}, where they flatten supervoxel
hierarchies in videos by finding a slice with uniform entropy.

%However, they formulate the problem as a quadratic integral programming, which makes the optimization NP-hard.
%On the contrary, we use a simple yet effective dynamic programming algorithm to find a globally-optimal slice.  

\paragraph{Predicting Segmentation Quality by Classification}
Classification has been exploited to predict segmentation quality in many works.
Ren \etal~\cite{ren2003learning} use a linear classifier base on Gestalt features~\cite{palmer1999vision}
to distinguish good and bad segmentations.
Their negative training data are generated by randomly placing a ground-truth mask over an image.
A similar idea is used to select parameters by Peng \etal~\cite{peng2008parameter} to select $\lambda$ in 
graph-cut based interactive segmentation.
They compute the segmentation with different $\lambda$, then select the one with highest predicted quality. 
More recently, Carreira \etal~\cite{carreira2010constrained}, Arbelaez \etal~\cite{arbelaez2014multiscale},
and Endres \etal~\cite{endres2014category} use a regression forest to predict the good overlap between
segments (object proposals) and ground truth objects.
We use similar features to~\cite{carreira2010constrained}, which are based on graph partition properties,
region properties, and Gestalt properties.
%Our work also share some similarities with~\cite{peng2008parameter}, where they use a regressor to decide quality of each parameter, and choose the one with highest score.

   
\paragraph{Scale-aware Vision Algorithms} 
Our work also bear a resemblance to the scale-aware algorithms for other vision tasks. 
For instance, exploiting the scale information has proven helpful for semantic image segmentation~\cite{chen2015attention} and 
pedestrain detection~\cite{li2015scale}. \cite{SR4VTs:wacv16} show that 
vision algorithms employing higher-resolution images perform better than employing low-resolution ones.  
Other scale-aware applications include object tracking~\cite{Klodt2013} and image thumbnailling~\cite{Sun2013}.     
   
   
   
   
   